version: '3.8'
services:
  # spark-master:
  #   container_name: spark-master
  #   deploy:
  #       resources:
  #           limits:
  #             cpus: '1'
  #             memory: "2g"
  #   image: veribilimiokulu/pyspark-3.4.1_python-3.8:1.0
  #   ports:
  #     - "4040:4040"
  #     - "7077:7077"
  #     - "8080:8080"
  #     - "18080:18080"
  #   networks:
  #     - vbo
  #   command: sh spark-master.sh

  # spark-worker:
  #   deploy:
  #       resources:
  #           limits:
  #             cpus: '1'
  #             memory: "2g"
  #   image: veribilimiokulu/pyspark-3.4.1_python-3.8:1.0
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8081-8089:8081"
  #   networks:
  #     - vbo
  #   command: sh spark-worker.sh

  # spark-client:
  #   container_name: spark-client
  #   deploy:
  #       resources:
  #           limits:
  #             cpus: '1'
  #             memory: "2g"
  #   build: spark_client
  #   ports:
  #     - "8888:8888"
  #     - "4041:4040"
  #   networks:
  #     - vbo
  #   volumes:
  #     - ./spark_client/examples:/opt/examples
  #   command: sleep infinity

  # S3 compatible object storage: MinIO
  minio:
    container_name: minio
    image: "minio/minio:RELEASE.2024-04-06T05-26-02Z-cpuv1"
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - vbo
    environment:
      MINIO_ROOT_USER: "dataops"
      MINIO_ROOT_PASSWORD: "Ankara06"
    command: server /data --console-address ":9001"
    
  zookeeper:
    image: quay.io/debezium/zookeeper:2.1
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    networks:
      - vbo

  kafka:
    container_name: kafka
    image: quay.io/debezium/kafka:2.1
    ports:
     - 9092:9092
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - vbo

  postgres:
    container_name: postgres
    image: quay.io/debezium/example-postgres:2.1
    ports:
     - 5432:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - vbo

  connect:
    container_name: connect
    image: quay.io/debezium/connect:2.1
    ports:
     - 8083:8083
    depends_on:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - vbo

  # Adding Flink services below
  flink-jobmanager:
    image: naci-pyflink:1.18.1
    container_name: flink-jobmanager
    ports:
      - "8081:8081"  # Flink Web UI
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - vbo

  flink-taskmanager:
    image: naci-pyflink:1.18.1
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - vbo

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: es
    environment:
      - node.name=es
      - cluster.name=es-docker-single
      - discovery.seed_hosts=es
      - discovery.type=single-node
      #- cluster.initial_master_nodes=es
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - xpack.ml.enabled=false  # Disable machine learning features

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - vbo

  kib:
    image: docker.elastic.co/kibana/kibana:7.17.0
    depends_on:
      - es
    container_name: kib
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es:9200
      ELASTICSEARCH_HOSTS: http://es:9200
    networks:
      - vbo

volumes:
  minio:
  postgres-db-volume:
  data:
    driver: local

networks:
  vbo: 